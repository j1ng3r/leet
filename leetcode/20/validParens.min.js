/*
isValid=(s,x="[({",y="])}",f=(i,z,c=s[i++])=>!c?!z:x.includes(c)?f(i,z+c):y.includes(c)?x.indexOf(z[z.length-1])==y.indexOf(c)?f(i,z.slice(0,-1)):!1:f(i,z))=>f(0,"");
isValid=(s,x="[({",y={"]":"[","(":")","{":"}"},f=(i,z,c=s[i++])=>!c?!z:x.includes(c)?f(i,z+c):c in y?y[c]==z[z.length-1]?f(i,z.slice(0,-1)):!1:f(i,z))=>f(0,"");
isValid=(s,x="[({",y="])}",f=(i,z,c=s[i++],Y=y.indexOf(c))=>!c?!z:x.includes(c)?f(i,z+c):~Y?x[Y]==z[z.length-1]?f(i,z.slice(0,-1)):!1:f(i,z))=>f(0,"");
isValid=(s,x="[({",y="])}",f=(i,z,c=s[i++],I="indexOf",Y=y[I](c))=>!c?!z:~x[I](c)?f(i,z+c):~Y?x[Y]==z[z.length-1]?f(i,z.slice(0,-1)):!1:f(i,z))=>f(0,"");
isValid=(s,x="[({",y="])}",f=(i,z,c=s[i++],I=S=>S.indexOf(c),Y=I(y))=>!c?!z:~I(x)?f(i,z+c):~Y?x[Y]==z[z.length-1]?f(i,z.slice(0,-1)):!1:f(i,z))=>f(0,"");
isValid=(s,x="[({",f=(i,z,c=s[i++],Y="])}".indexOf(c))=>c?x.includes(c)?f(i,[c,z]):~Y?x[Y]==z[0]?f(i,z[1]):1:f(i,z):z[0])=>!f(0,[]);
isValid=(s,i=0,x="[({",f=(z,c=s[i++],Y="])}".indexOf(c))=>c?x.includes(c)?f([c,z]):~Y?x[Y]==z[0]?f(z[1]):1:f(z):z[0])=>!f([]);
isValid=(s,i=0,x="[({",f=(z,c=s[i++],Y="])}".indexOf(c))=>c?f(x.includes(c)?[c,z]:~Y?x[Y]==z[0]?z[1]:"z":z):z[0])=>!f([]);
*/
isValid=(s,i=0,x="[({",f=(z,c=s[i++],Y="])}".indexOf(c))=>c?f(x.includes(c)?[c,z]:~Y?x[Y]==z[0]?z[1]:"z":z):z[0])=>!f([]);

console.assert(isValid(""))
console.assert(isValid("()"))
console.assert(isValid("[]{()}"))
console.assert(!isValid("("))
console.assert(!isValid("([)"));
console.assert(!isValid("}"));
console.assert(isValid("()a()"));
console.log("Tests complete.");